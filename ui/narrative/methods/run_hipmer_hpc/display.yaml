#
# define display information
#
name: Assemble with HipMer
tooltip: |
    Assemble prokaryotic and eukaryotic reads using the HipMer assembly pipeline.
screenshots: []

icon: hipmer-blue.png

#
# define a set of similar methods that might be useful to the user
#
suggestions:
    apps:
        related:
            []
        next:
            []
    methods:
        related:
            []
        next:
            [annotate_contigset]

#
# Configure the display and description of parameters
#
parameters :
    read_library_name :
        ui-name : Read Library
        short-hint : Read library (only PairedEnd Libs supported now)
    output_contigset_name:
        ui-name : Output ContigSet name
        short-hint : Enter a name for the assembled contigs data object
    mer_sizes:
        ui-name : k-mer sizes
        short-hint : |
            k-mer sizes to use in the assembly process.  This is a
            comma seperated list of integers to use as mer sizes.  For
            metagenomes you may want to use 21,31,51,77,95.
    min_depth_cutoff:
        ui-name : Min Depth Cutoff
        short-hint : |
            K-mers present at frequencies less than this cutoff get culled from the assembly
            early on thus giving faster and cleaner assemblies.  Single-end reads will auto-detect this value.
    ins_avg:
        ui-name : Insert Average (required if paired-end) (int)
        short-hint :  Estimated average Insert Length for Parid-End Reads in bp
    ins_dev:
        ui-name : Insert Deviation (required if paired-end) (int)
        short-hint :  Estimated std. Deviation of insert size in bp
    is_rev_comped:
        ui-name : Library Read Orientation
        short-hint : |
            The read pairs should be either in the "outtie" orientation,
            i.e <-- --> or the "innie" orientation i.e. --> <--
    read_type:
        ui-name : If reads are paired-end or not
        short-hint : |
            Reads must be interleaved or single-end reads.
    aggressive:
        ui-name : Assembly aggressiveness (more sensitive, less specific)
        short-hint : |
            This only applies to metagenomes. It will give a more sensitive, less specific assembly.
    diploid:
        ui-name : diploidy
        short-hint : |
            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxl give a more sensitive, less specific assembly.
    bubble_min_depth_cutoff:
        ui-name : bubble min. depth cutoff
        short-hint : |
            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxl give a more sensitive, less specific assembly.
    usedebug:
        ui-name : debug queue
        short-hint : |
            use debug queue (not recomended)

parameter-groups :
    reads :
        ui-name : Reads
        short-hint : |
            Reads objects and options to use in the assembly.
    is_meta:
        ui-name : Is this metagenome data 
        short-hint : |
            The assembly will use different heuristics to assembly metagenome data.
    is_plant:
        ui-name : Is this plant data 
        short-hint : |
            The assembly will use different heuristics to assembly plant data.

description : |
    <p>KBase wrapper for the HipMer Assembler (v0.9.5).</p>
    <p>HipMer is a high performance parallelization and port of Meraculous ( http://jgi.doe.gov/data-and-tools/meraculous/ ).
       It is largely written in UPC, with the exception of the UFX generation, which is written in C++/MPI.</p>
    <p>For more details see: https://sourceforge.net/p/hipmer/wiki/Home/</p>
    <p>This project is a joint collaboration between UC Berkeley ( http://www.eecs.berkeley.edu ),
    JGI ( http://jgi.doe.gov ), and CRD ( http://crd.lbl.gov/ )</p>

    <p>Primary authors are: Evangelos Georganas, Aydin Buluc, Steven Hofmeyr, Leonid Oliker and
    Rob Egan, with direction and advice from Kathy Yelick. The original Meraculous was developed by
    Jarrod Chapman, Isaac Ho, Eugene Goltsman, and Daniel Rokhsar.</p>
    <p><b>Known limitations</b>: HipMer is still under active development.
    The wrapping of HipMer in KBase does not currently support multiple read libraries and many of the options are hard-coded.</p>

publications :
    -
        display-text : |
            Georganas, Evangelos, et al. "HipMer: an extreme-scale de novo genome assembler." Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis. ACM, 2015.
    -
        display-text : |
            J. A. Chapman, I. Ho, S. Sunkara, S. Luo, G. P. Schroth, and D. S. Rokhsar, "Meraculous: De novo genome assembly with short paired-end reads," PLoS ONE, vol. 6, no. 8, p. e23501, 08 2011.
